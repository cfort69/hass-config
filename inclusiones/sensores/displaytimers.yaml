  # - platform: template
  #   sensors:
  #     calprincipal_counter:
  #       friendly_name: Calentador Principal Counter
  #       value_template: '{{ states.input_number.slider_timer_calprincipal.state|int }}'
      # unit_of_measurement: 'Minutes'
      # value_template: '{{ "%0.02d" | format(states("input_number.slider_timer_calprincipal") | int }}'

  # - platform: template
  #   sensors:
  #     stopwatch:
  #       friendly_name: "Stopwatch"
  #       # value_template: '{{ states.input_number.slider_timer_calprincipal.state|int }}'
  #       value_template: '{{ (now() - states.automation.stopwatch_start.attributes.last_triggered).total_seconds() | int }}'
  #       # value_template: >
  #       #   {% if is_state('input_boolean.stopwatch', 'on') %}
  #       #     {{ (now() - states.automation.stopwatch_start.attributes.last_triggered).total_seconds() | int }}
  #       #   {% elif is_state('sensor.stopwatch', 'unknown') %}
  #       #     0
  #       #   {% else %}
  #       #     {{ states('sensor.stopwatch') }}
  #       #   {% endif %}
  #       unit_of_measurement: 'sec'
  #       # entity_id:
  #       #   - automation.stopwatch_start
  #       #   - automation.stopwatch_update
  #       #   - automation.stopwatch_stop

  # - platform: template
  #   piscina_timer_off:
  #     entity_id: 
  #     - input_number.slider_timer_piscina_horas
  #     - input_number.slider_timer_piscina_minutos
  #     value_template: >
  #         {% set relative_time =  (states.input_number.slider_timer_piscina_horas.state|float|multiply(60) + states.input_number.slider_timer_piscina_minutos.state|float) - (now().hour|float|multiply(60) + now().minute) %}
  #         {%- if relative_time < 0 -%}
  #             {{24*60+relative_time}}
  #         {%- else -%}
  #             {{ relative_time-60}}
  #         {%- endif %}


  # - platform: time_date
  #   display_options:
  #     - 'time'

  # - platform: template
  #   piscina_timer_duracion_horas:
  #     value_template: '{{ states.input_number.slider_timer_piscina_horas.state|int }}'
  #   piscina_timer_duracion_minutos:
  #     value_template: '{{ states.input_number.slider_timer_piscina_minutos.state|int }}'
  #   piscina_clock:
  #     value_template: >-
  #       {{ states.sensor.piscina_timer_duracion_horas.state }}:
  #       {%- if states.sensor.piscina_timer_duracion_minutos.state|length == 1 -%}
  #         0
  #       {%- endif -%}
  #         {{ states.sensor.piscina_timer_duracion_minutos.state }}
  #   piscina_clock_long:
  #     value_template: >-
  #       {% if states.sensor.piscina_timer_duracion_horas.state|length == 1 -%}
  #         0
  #       {%- endif -%}
  #         {{ states.sensor.piscina_timer_duracion_horas.state }}:
  #       {%- if states.sensor.piscina_timer_duracion_minutos.state|length == 1 -%}
  #         0
  #       {%- endif -%}
  #         {{ states.sensor.piscina_timer_duracion_minutos.state }}
  #   piscina_clock_start:
  #     value_template: '{{ ((as_timestamp(now())|int + 300)|timestamp_custom("%H:%M")) }}'

